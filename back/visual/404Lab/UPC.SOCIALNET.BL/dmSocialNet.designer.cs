#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UPC.SOCIALNET.BL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="upc")]
	public partial class dmSocialNetDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertPersona(Persona instance);
    partial void UpdatePersona(Persona instance);
    partial void DeletePersona(Persona instance);
    partial void InsertUsuario(Usuario instance);
    partial void UpdateUsuario(Usuario instance);
    partial void DeleteUsuario(Usuario instance);
    #endregion
		
		public dmSocialNetDataContext() : 
				base(global::UPC.SOCIALNET.BL.Properties.Settings.Default.upcConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public dmSocialNetDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dmSocialNetDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dmSocialNetDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dmSocialNetDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Persona> Persona
		{
			get
			{
				return this.GetTable<Persona>();
			}
		}
		
		public System.Data.Linq.Table<Usuario> Usuario
		{
			get
			{
				return this.GetTable<Usuario>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Persona")]
	public partial class Persona : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IdPersona;
		
		private string _Apemat;
		
		private string _Apepat;
		
		private string _Nombres;
		
		private string _Sexo;
		
		private string _Password;
		
		private string _Alias;
		
		private string _Email;
		
		private System.Nullable<int> _Doctip;
		
		private string _Docnro;
		
		private System.Nullable<System.DateTime> _Fecnac;
		
		private System.Nullable<int> _Edad;
		
		private string _Img;
		
		private System.Data.Linq.Binary _Created;
		
		private System.Nullable<System.DateTime> _Updated;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdPersonaChanging(long value);
    partial void OnIdPersonaChanged();
    partial void OnApematChanging(string value);
    partial void OnApematChanged();
    partial void OnApepatChanging(string value);
    partial void OnApepatChanged();
    partial void OnNombresChanging(string value);
    partial void OnNombresChanged();
    partial void OnSexoChanging(string value);
    partial void OnSexoChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnAliasChanging(string value);
    partial void OnAliasChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnDoctipChanging(System.Nullable<int> value);
    partial void OnDoctipChanged();
    partial void OnDocnroChanging(string value);
    partial void OnDocnroChanged();
    partial void OnFecnacChanging(System.Nullable<System.DateTime> value);
    partial void OnFecnacChanged();
    partial void OnEdadChanging(System.Nullable<int> value);
    partial void OnEdadChanged();
    partial void OnImgChanging(string value);
    partial void OnImgChanged();
    partial void OnCreatedChanging(System.Data.Linq.Binary value);
    partial void OnCreatedChanged();
    partial void OnUpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedChanged();
    #endregion
		
		public Persona()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPersona", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public long IdPersona
		{
			get
			{
				return this._IdPersona;
			}
			set
			{
				if ((this._IdPersona != value))
				{
					this.OnIdPersonaChanging(value);
					this.SendPropertyChanging();
					this._IdPersona = value;
					this.SendPropertyChanged("IdPersona");
					this.OnIdPersonaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apemat", DbType="VarChar(32)", UpdateCheck=UpdateCheck.Never)]
		public string Apemat
		{
			get
			{
				return this._Apemat;
			}
			set
			{
				if ((this._Apemat != value))
				{
					this.OnApematChanging(value);
					this.SendPropertyChanging();
					this._Apemat = value;
					this.SendPropertyChanged("Apemat");
					this.OnApematChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apepat", DbType="VarChar(32)", UpdateCheck=UpdateCheck.Never)]
		public string Apepat
		{
			get
			{
				return this._Apepat;
			}
			set
			{
				if ((this._Apepat != value))
				{
					this.OnApepatChanging(value);
					this.SendPropertyChanging();
					this._Apepat = value;
					this.SendPropertyChanged("Apepat");
					this.OnApepatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombres", DbType="VarChar(32)", UpdateCheck=UpdateCheck.Never)]
		public string Nombres
		{
			get
			{
				return this._Nombres;
			}
			set
			{
				if ((this._Nombres != value))
				{
					this.OnNombresChanging(value);
					this.SendPropertyChanging();
					this._Nombres = value;
					this.SendPropertyChanged("Nombres");
					this.OnNombresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sexo", DbType="VarChar(1)", UpdateCheck=UpdateCheck.Never)]
		public string Sexo
		{
			get
			{
				return this._Sexo;
			}
			set
			{
				if ((this._Sexo != value))
				{
					this.OnSexoChanging(value);
					this.SendPropertyChanging();
					this._Sexo = value;
					this.SendPropertyChanged("Sexo");
					this.OnSexoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(32)", UpdateCheck=UpdateCheck.Never)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Alias", DbType="VarChar(32)", UpdateCheck=UpdateCheck.Never)]
		public string Alias
		{
			get
			{
				return this._Alias;
			}
			set
			{
				if ((this._Alias != value))
				{
					this.OnAliasChanging(value);
					this.SendPropertyChanging();
					this._Alias = value;
					this.SendPropertyChanged("Alias");
					this.OnAliasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(64)", UpdateCheck=UpdateCheck.Never)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Doctip", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> Doctip
		{
			get
			{
				return this._Doctip;
			}
			set
			{
				if ((this._Doctip != value))
				{
					this.OnDoctipChanging(value);
					this.SendPropertyChanging();
					this._Doctip = value;
					this.SendPropertyChanged("Doctip");
					this.OnDoctipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Docnro", DbType="VarChar(11)", UpdateCheck=UpdateCheck.Never)]
		public string Docnro
		{
			get
			{
				return this._Docnro;
			}
			set
			{
				if ((this._Docnro != value))
				{
					this.OnDocnroChanging(value);
					this.SendPropertyChanging();
					this._Docnro = value;
					this.SendPropertyChanged("Docnro");
					this.OnDocnroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecnac", DbType="Date", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Fecnac
		{
			get
			{
				return this._Fecnac;
			}
			set
			{
				if ((this._Fecnac != value))
				{
					this.OnFecnacChanging(value);
					this.SendPropertyChanging();
					this._Fecnac = value;
					this.SendPropertyChanged("Fecnac");
					this.OnFecnacChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Edad", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> Edad
		{
			get
			{
				return this._Edad;
			}
			set
			{
				if ((this._Edad != value))
				{
					this.OnEdadChanging(value);
					this.SendPropertyChanging();
					this._Edad = value;
					this.SendPropertyChanged("Edad");
					this.OnEdadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Img", DbType="VarChar(32)", UpdateCheck=UpdateCheck.Never)]
		public string Img
		{
			get
			{
				return this._Img;
			}
			set
			{
				if ((this._Img != value))
				{
					this.OnImgChanging(value);
					this.SendPropertyChanging();
					this._Img = value;
					this.SendPropertyChanged("Img");
					this.OnImgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updated", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Updated
		{
			get
			{
				return this._Updated;
			}
			set
			{
				if ((this._Updated != value))
				{
					this.OnUpdatedChanging(value);
					this.SendPropertyChanging();
					this._Updated = value;
					this.SendPropertyChanged("Updated");
					this.OnUpdatedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Usuario")]
	public partial class Usuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Usucod;
		
		private string _Codigo;
		
		private string _Usuario1;
		
		private string _Pass;
		
		private string _Passold;
		
		private System.Nullable<int> _Estado;
		
		private int _Permiso;
		
		private long _IdPersona;
		
		private System.Data.Linq.Binary _Created;
		
		private System.Nullable<System.DateTime> _Updated;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUsucodChanging(int value);
    partial void OnUsucodChanged();
    partial void OnCodigoChanging(string value);
    partial void OnCodigoChanged();
    partial void OnUsuario1Changing(string value);
    partial void OnUsuario1Changed();
    partial void OnPassChanging(string value);
    partial void OnPassChanged();
    partial void OnPassoldChanging(string value);
    partial void OnPassoldChanged();
    partial void OnEstadoChanging(System.Nullable<int> value);
    partial void OnEstadoChanged();
    partial void OnPermisoChanging(int value);
    partial void OnPermisoChanged();
    partial void OnIdPersonaChanging(long value);
    partial void OnIdPersonaChanged();
    partial void OnCreatedChanging(System.Data.Linq.Binary value);
    partial void OnCreatedChanged();
    partial void OnUpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedChanged();
    #endregion
		
		public Usuario()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Usucod", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int Usucod
		{
			get
			{
				return this._Usucod;
			}
			set
			{
				if ((this._Usucod != value))
				{
					this.OnUsucodChanging(value);
					this.SendPropertyChanging();
					this._Usucod = value;
					this.SendPropertyChanged("Usucod");
					this.OnUsucodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codigo", DbType="VarChar(10)", UpdateCheck=UpdateCheck.Never)]
		public string Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this.OnCodigoChanging(value);
					this.SendPropertyChanging();
					this._Codigo = value;
					this.SendPropertyChanged("Codigo");
					this.OnCodigoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Usuario", Storage="_Usuario1", DbType="VarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string Usuario1
		{
			get
			{
				return this._Usuario1;
			}
			set
			{
				if ((this._Usuario1 != value))
				{
					this.OnUsuario1Changing(value);
					this.SendPropertyChanging();
					this._Usuario1 = value;
					this.SendPropertyChanged("Usuario1");
					this.OnUsuario1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pass", DbType="VarChar(32)", UpdateCheck=UpdateCheck.Never)]
		public string Pass
		{
			get
			{
				return this._Pass;
			}
			set
			{
				if ((this._Pass != value))
				{
					this.OnPassChanging(value);
					this.SendPropertyChanging();
					this._Pass = value;
					this.SendPropertyChanged("Pass");
					this.OnPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Passold", DbType="VarChar(32)", UpdateCheck=UpdateCheck.Never)]
		public string Passold
		{
			get
			{
				return this._Passold;
			}
			set
			{
				if ((this._Passold != value))
				{
					this.OnPassoldChanging(value);
					this.SendPropertyChanging();
					this._Passold = value;
					this.SendPropertyChanged("Passold");
					this.OnPassoldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					this.OnEstadoChanging(value);
					this.SendPropertyChanging();
					this._Estado = value;
					this.SendPropertyChanged("Estado");
					this.OnEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Permiso", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Permiso
		{
			get
			{
				return this._Permiso;
			}
			set
			{
				if ((this._Permiso != value))
				{
					this.OnPermisoChanging(value);
					this.SendPropertyChanging();
					this._Permiso = value;
					this.SendPropertyChanged("Permiso");
					this.OnPermisoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPersona", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public long IdPersona
		{
			get
			{
				return this._IdPersona;
			}
			set
			{
				if ((this._IdPersona != value))
				{
					this.OnIdPersonaChanging(value);
					this.SendPropertyChanging();
					this._IdPersona = value;
					this.SendPropertyChanged("IdPersona");
					this.OnIdPersonaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updated", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Updated
		{
			get
			{
				return this._Updated;
			}
			set
			{
				if ((this._Updated != value))
				{
					this.OnUpdatedChanging(value);
					this.SendPropertyChanging();
					this._Updated = value;
					this.SendPropertyChanged("Updated");
					this.OnUpdatedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
